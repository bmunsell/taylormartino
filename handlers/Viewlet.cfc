<cfcomponent name="General" extends="coldbox.system.EventHandler" output="false" accessors="true" autowire="true">	<cfproperty name="pageService" inject="ioc:pageList" type="ioc" scope="variables" />	<cfproperty name="yt" inject="ioc:youTube" type="ioc" scope="variables" />	<cfproperty name="rss" inject="ioc:rss" type="ioc" scope="variables" />	<cfproperty name="siteService" inject="model:siteService" type="model" scope="variables" />	<cfscript>		this.event_cache_suffix = "";		this.prehandler_only 	= "";		this.prehandler_except 	= "";		this.posthandler_only 	= "";		this.posthandler_except = "";		this.aroundHandler_only = "";		this.aroundHandler_except = "";				/* HTTP Methods Allowed for actions. */		/* Ex: this.allowedMethods = {delete='POST,DELETE',index='GET'} */		this.allowedMethods = structnew();	</cfscript><!----------------------------------------- IMPLICIT EVENTS ------------------------------------------>
	<!--- UNCOMMENT HANDLER IMPLICIT EVENTS	<!--- preHandler --->	<cffunction name="preHandler" returntype="void" output="false" hint="Executes before any event in this handler">		<cfargument name="event">		<cfargument name="action" hint="The intercepted action"/>		<cfargument name="eventArguments" hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>	<!--- postHandler --->	<cffunction name="postHandler" returntype="void" output="false" hint="Executes after any event in this handler">		<cfargument name="event">		<cfargument name="action" 			hint="The intercepted action"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>		<!--- aroundHandler --->	<cffunction name="aroundHandler" returntype="void" output="false" hint="Executes around any event in this handler">		<cfargument name="event">		<cfargument name="targetAction" 	hint="The intercepted action UDF method"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();			// process targeted action			argument.targetAction(event);		</cfscript>	</cffunction>	<!--- onMissingAction --->	<cffunction name="onMissingAction" returntype="void" output="false" hint="Executes if a request action (method) is not found in this handler">		<cfargument name="event" >		<cfargument name="missingAction" 	hint="The requested action string"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>		<!--- onError --->	<cffunction name="onError" output="false" hint="Executes if ANY action causes an exception">		<cfargument name="event">		<cfargument name="faultAction" 		hint="The action that caused the error"/>		<cfargument name="exception"  		hint="The exception structure"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>						</cfscript>	</cffunction>	--->		<!---PRE Handler--->	<cffunction name="preHandler" returntype="void" output="false" hint="Gets the Services">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>					 	event.paramValue("Page.PageDir","");		 	event.paramValue("SubPage.PageDir","");		 									</cfscript>					</cffunction>	<!------------------------------------------- PUBLIC EVENTS ------------------------------------------>
	<!---ADMIN VIEWLETS--->	<cffunction name="adminHeader" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/admin/header");		</cfscript>	</cffunction>		<cffunction name="adminFooter" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/admin/footer");		</cfscript>	</cffunction>		<!---MAIN VIEWLETS--->	<cffunction name="dateDropDown" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfargument name="eventArguments">			<cfscript>			event.paramValue("FieldNamePostFix","");			if(isDefined('arguments.FieldNamePostFix')) {				rc.FieldNamePostFix = arguments.FieldNamePostFix;			}			event.paramValue("FieldNamePreFix","");			if(isDefined('arguments.FieldNamePreFix')) {				rc.FieldNamePreFix = arguments.FieldNamePreFix;			}			event.paramValue("showCalendar",true);			if(isDefined('arguments.showCalendar')) {				rc.showCalendar = arguments.showCalendar;			}			event.paramValue("selectedDate","#now()#");			if(isDefined('arguments.selectedDate')) {				rc.selectedDate = arguments.selectedDate;			}			event.paramValue("selectedMonth","0");			if(isDefined('arguments.selectedMonth')) {				rc.selectedMonth = arguments.selectedMonth;			}			event.paramValue("selectedDay","0");			if(isDefined('arguments.selectedDay')) {				rc.selectedDay = arguments.selectedDay;			}			event.paramValue("selectedYear","0");			if(isDefined('arguments.selectedYear')) {				rc.selectedYear = arguments.selectedYear;			}			event.paramValue("class","0");			if(isDefined('arguments.class')) {				rc.class = arguments.class;			}			event.paramValue("calendarName","");			if(isDefined('arguments.calendarName')) {				rc.calendarName = arguments.calendarName;			}			event.paramValue("syncWithCalendar","ASC");			if(isDefined('arguments.syncWithCalendar')) {				rc.syncWithCalendar = arguments.syncWithCalendar;			}							return renderView("viewlet/dateDropDown");		</cfscript>	</cffunction>				<cffunction name="header" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/header");		</cfscript>	</cffunction>		<cffunction name="logos" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/logos");		</cfscript>	</cffunction>		<cffunction name="mobileHeader" hint="Site Header">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>						prc.cats = pageService.GetCat(isActive=1);			return renderView("viewlet/mobileHeader");		</cfscript>	</cffunction>		<cffunction name="nav" hint="Site Nav">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>			//Get ALL MENU CATEGORIES						prc.cats = pageService.GetCat(excludeIDs='19,25,39,40');						return renderView("viewlet/nav");		</cfscript>	</cffunction>		<cffunction name="sidebarLeft" hint="Site Left Sidebar">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>						prc.PI = pageService.GetAllSubPages(PageID=19);			prc.cases = pageService.GetAllSubPages(PageID=25);			return renderView("viewlet/sidebarLeft");		</cfscript>	</cffunction>		<cffunction name="sidebarRight" hint="Site Right Sidebar">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>			//Get FRONT PAGE NEWS TITLES			prc.captcha = pageService.makeRandomString();			prc.captchaHash = hash(prc.captcha);			prc.sidenews = pageService.GetNewsTitles(MaxRows=4,orderBy='isSticky Desc, PageDate Desc');						return renderView("viewlet/sidebarRight");		</cfscript>	</cffunction>		<cffunction name="footer" hint="Site Footer">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/footer");		</cfscript>	</cffunction>		<cffunction name="mobileFooter" hint="Site Footer">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">		<cfscript>									return renderView("viewlet/mobileFooter");		</cfscript>	</cffunction>	<!------------------------------------------- PRIVATE EVENTS ------------------------------------------>
</cfcomponent>